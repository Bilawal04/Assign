DS&OOP ASSIGNMENT COMPLEX NUMBER's LINKED LIST
SUBMITTED BY BILAWAL
    

  READ ME FILE:
The main.cpp file includes four header files named complex.h,complex.cpp,llist.h and llist.cpp

COMPLEX.H

	In the header file of complex.h a class named complex is created.

	Private Part:

		The private part has two variables of double type named real and imaginary.

	Public Part:

		The public part has the followig functions in it:
	
		1-	getter: It displays the value of complex number on the screen.
		2-	add: It adds two complex numbers.
		3-	sub: It subtracts two complex numbers.
		4-	mul: It multiplies two complex numbers.
		5-	div: It divides two complex numbers.
	
LLIST.H

	In the header file of llist.h a struct named node and a class named linklist is created.

	
	LINKLIST:

		Private Part:

			The private part has a pointer named head of node type.

		Public Part:

			The public part has the following functions in it:

			1-	No Argument Constructor: It points the head to NULL.
			2-	insert_at_end: It creates a new node and inserts it at the end of the linklist.
			3-	insert_after_pos: It creates a new node and inserts it in the linklist after the position entered by the user.
			4-	delete_at_pos: It deletes the node in the linklist at the position entered by the user.
			5-	val_at_pos: It displays the value of the complex number stored in the node at the position entered by the user.
			6-	print: It displays all of the nodes in the linklist in order.
	
MAIN.CPP

	1-	In the main function I created a linklist l1.
	2-	Then I created three objects named num1, num2 and num3 of cnumber class and initialized them with values of (4, 5), (3, -3) and (4, 3) respectively.
	3-	Then I inserted num1 at start of linklist and num2 and num3 at end of linklist.
	4-	Then I added num1 and num2 and inserted the result at the end of linklist.
	5-	Then I subtracted num1 and num3 and inserted the result at the end of linklist.
	6-	Then I multiplied num2 and num3 and inserted the result at the end of linklist.
	7-	Then I deleted the node at position 4.
	8-	Then I divided num1 and num3 and inserted the result at the end of linklist.
	NOTE:	linklist is printed after each step from step 3 to step 8

